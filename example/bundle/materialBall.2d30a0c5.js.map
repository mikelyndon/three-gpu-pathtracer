{"mappings":"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","sources":["example/materialBall.js"],"sourcesContent":["import * as THREE from 'three';\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { PathTracingRenderer, PhysicalPathTracingMaterial, PhysicalCamera, BlurredEnvMapGenerator, EquirectCamera } from '../src/index.js';\nimport { PathTracingSceneWorker } from '../src/workers/PathTracingSceneWorker.js';\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader.js';\nimport { MeshoptDecoder } from 'three/examples/jsm/libs/meshopt_decoder.module.js';\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\n\nlet renderer, controls, sceneInfo, ptRenderer, activeCamera, fsQuad, materials;\nlet perspectiveCamera, orthoCamera, equirectCamera;\nlet envMap, envMapGenerator, scene;\nlet samplesEl;\n\nconst orthoWidth = 5;\n\nconst params = {\n\n\tmaterial1: {\n\t\tcolor: '#ffc766',\n\t\temissive: '#000000',\n\t\temissiveIntensity: 1,\n\t\troughness: 0.1,\n\t\tmetalness: 0.8,\n\t\tior: 1.495,\n\t\ttransmission: 0.0,\n\t\topacity: 1.0,\n\t\tclearcoat: 0.0,\n\t\tclearcoatRoughness: 0.0,\n\t\tsheenColor: '#000000',\n\t\tsheenRoughness: 0.0,\n\t\tiridescence: 0.0,\n\t\tiridescenceIOR: 1.5,\n\t\tiridescenceThickness: 400,\n\t\tmatte: false,\n\t\tcastShadow: true,\n\t},\n\tmaterial2: {\n\t\tcolor: '#db7157',\n\t\temissive: '#000000',\n\t\temissiveIntensity: 1,\n\t\troughness: 0.8,\n\t\tmetalness: 0.1,\n\t\ttransmission: 0.0,\n\t\tior: 1.495,\n\t\topacity: 1.0,\n\t\tclearcoat: 0.0,\n\t\tclearcoatRoughness: 0.0,\n\t\tsheenColor: '#000000',\n\t\tsheenRoughness: 0.0,\n\t\tiridescence: 0.0,\n\t\tiridescenceIOR: 1.5,\n\t\tiridescenceThickness: 400,\n\t\tmatte: false,\n\t\tcastShadow: true,\n\t},\n\tmaterial3: {\n\t\tcolor: '#000000',\n\t\troughness: 0.01,\n\t\tmetalness: 0.05,\n\t\tclearcoat: 0.0,\n\t\tclearcoatRoughness: 0.0,\n\t\tsheenColor: '#000000',\n\t\tsheenRoughness: 0.0,\n\t\tiridescence: 0.0,\n\t\tiridescenceIOR: 1.5,\n\t\tiridescenceThickness: 400,\n\t\tmatte: false,\n\t\tcastShadow: true,\n\t},\n\n\tmultipleImportanceSampling: true,\n\tstableNoise: false,\n\tenvironmentIntensity: 1,\n\tenvironmentRotation: 0,\n\tenvironmentBlur: 0.0,\n\tbackgroundBlur: 0.0,\n\tbounces: 5,\n\tsamplesPerFrame: 1,\n\tacesToneMapping: true,\n\tresolutionScale: 1 / window.devicePixelRatio,\n\ttransparentTraversals: 20,\n\tfilterGlossyFactor: 0.5,\n\ttiles: 1,\n\tbackgroundAlpha: 1,\n\tcheckerboardTransparency: true,\n\tcameraProjection: 'Perspective',\n};\n\nif ( window.location.hash.includes( 'transmission' ) ) {\n\n\tparams.material1.metalness = 0.0;\n\tparams.material1.roughness = 0.05;\n\tparams.material1.transmission = 1.0;\n\tparams.material1.color = '#ffffff';\n\tparams.bounces = 10;\n\n}\n\n// adjust performance parameters for mobile\nconst aspectRatio = window.innerWidth / window.innerHeight;\nif ( aspectRatio < 0.65 ) {\n\n\tparams.bounces = Math.max( params.bounces, 6 );\n\tparams.resolutionScale *= 0.5;\n\tparams.tiles = 2;\n\tparams.multipleImportanceSampling = false;\n\tparams.environmentBlur = 0.35;\n\n}\n\ninit();\n\nasync function init() {\n\n\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\trenderer.toneMapping = THREE.ACESFilmicToneMapping;\n\trenderer.outputEncoding = THREE.sRGBEncoding;\n\trenderer.setClearColor( 0, 0 );\n\tdocument.body.appendChild( renderer.domElement );\n\n\tconst aspect = window.innerWidth / window.innerHeight;\n\tperspectiveCamera = new PhysicalCamera( 75, aspect, 0.025, 500 );\n\tperspectiveCamera.position.set( - 4, 2, 3 );\n\n\tconst orthoHeight = orthoWidth / aspect;\n\torthoCamera = new THREE.OrthographicCamera( orthoWidth / - 2, orthoWidth / 2, orthoHeight / 2, orthoHeight / - 2, 0, 100 );\n\torthoCamera.position.set( - 4, 2, 3 );\n\n\tequirectCamera = new EquirectCamera();\n\tequirectCamera.position.set( - 4, 2, 3 );\n\n\tptRenderer = new PathTracingRenderer( renderer );\n\tptRenderer.alpha = true;\n\tptRenderer.material = new PhysicalPathTracingMaterial();\n\tptRenderer.material.setDefine( 'TRANSPARENT_TRAVERSALS', params.transparentTraversals );\n\tptRenderer.material.setDefine( 'FEATURE_MIS', Number( params.multipleImportanceSampling ) );\n\tptRenderer.tiles.set( params.tiles, params.tiles );\n\n\tfsQuad = new FullScreenQuad( new THREE.MeshBasicMaterial( {\n\t\tmap: ptRenderer.target.texture,\n\t\tblending: THREE.CustomBlending,\n\t} ) );\n\n\tcontrols = new OrbitControls( perspectiveCamera, renderer.domElement );\n\tcontrols.addEventListener( 'change', () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\n\tscene = new THREE.Scene();\n\n\tsamplesEl = document.getElementById( 'samples' );\n\n\tenvMapGenerator = new BlurredEnvMapGenerator( renderer );\n\n\tconst envMapPromise = new Promise( resolve => {\n\n\t\tnew RGBELoader()\n\t\t\t.load( 'https://raw.githubusercontent.com/mrdoob/three.js/dev/examples/textures/equirectangular/royal_esplanade_1k.hdr', texture => {\n\n\t\t\t\tenvMap = texture;\n\n\t\t\t\tupdateEnvBlur();\n\t\t\t\tresolve();\n\n\t\t\t} );\n\n\t} );\n\n\tconst generator = new PathTracingSceneWorker();\n\tconst gltfPromise = new GLTFLoader()\n\t\t.setMeshoptDecoder( MeshoptDecoder )\n\t\t.loadAsync( 'https://raw.githubusercontent.com/gkjohnson/3d-demo-data/main/models/material-balls/material_ball_v2.glb' )\n\t\t.then( gltf => {\n\n\t\t\tconst group = new THREE.Group();\n\n\t\t\tgltf.scene.scale.setScalar( 0.01 );\n\t\t\tgltf.scene.updateMatrixWorld();\n\t\t\tgroup.add( gltf.scene );\n\n\t\t\tconst box = new THREE.Box3();\n\t\t\tbox.setFromObject( gltf.scene );\n\n\t\t\tconst floor = new THREE.Mesh(\n\t\t\t\tnew THREE.CylinderBufferGeometry( 3, 3, 0.05, 200 ),\n\t\t\t\tnew THREE.MeshPhysicalMaterial( { color: 0xffffff, roughness: 0, metalness: 0.25 } ),\n\t\t\t);\n\t\t\tfloor.geometry = floor.geometry.toNonIndexed();\n\t\t\tfloor.geometry.clearGroups();\n\t\t\tfloor.position.y = box.min.y - 0.03;\n\t\t\tgroup.add( floor );\n\n\t\t\tconst material1 = new THREE.MeshPhysicalMaterial();\n\t\t\tconst material2 = new THREE.MeshPhysicalMaterial();\n\n\t\t\tgltf.scene.traverse( c => {\n\n\t\t\t\t// the vertex normals on the material ball are off...\n\t\t\t\t// TODO: precompute the vertex normals so they are correct on load\n\t\t\t\tif ( c.geometry ) {\n\n\t\t\t\t\tc.geometry.computeVertexNormals();\n\n\t\t\t\t}\n\n\t\t\t\tif ( c.name === 'Sphere_1' ) {\n\n\t\t\t\t\tc.material = material2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tc.material = material1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( c.name === 'subsphere_1' ) {\n\n\t\t\t\t\tc.material = material2;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tmaterials = [ material1, material2, floor.material ];\n\n\t\t\treturn generator.generate( group );\n\n\t\t} )\n\t\t.then( result => {\n\n\t\t\tsceneInfo = result;\n\n\t\t\tscene.add( result.scene );\n\n\t\t\tconst { bvh, textures, materials } = result;\n\t\t\tconst geometry = bvh.geometry;\n\t\t\tconst material = ptRenderer.material;\n\n\t\t\tmaterial.bvh.updateFrom( bvh );\n\t\t\tmaterial.normalAttribute.updateFrom( geometry.attributes.normal );\n\t\t\tmaterial.tangentAttribute.updateFrom( geometry.attributes.tangent );\n\t\t\tmaterial.uvAttribute.updateFrom( geometry.attributes.uv );\n\t\t\tmaterial.materialIndexAttribute.updateFrom( geometry.attributes.materialIndex );\n\t\t\tmaterial.textures.setTextures( renderer, 2048, 2048, textures );\n\t\t\tmaterial.materials.updateFrom( materials, textures );\n\n\t\t\tgenerator.dispose();\n\n\t\t} );\n\n\tawait Promise.all( [ gltfPromise, envMapPromise ] );\n\n\tdocument.getElementById( 'loading' ).remove();\n\tdocument.body.classList.add( 'checkerboard' );\n\n\tonResize();\n\twindow.addEventListener( 'resize', onResize );\n\tconst gui = new GUI();\n\n\tupdateCamera( params.cameraProjection );\n\n\tconst ptFolder = gui.addFolder( 'Path Tracing' );\n\tptFolder.add( params, 'acesToneMapping' ).onChange( value => {\n\n\t\trenderer.toneMapping = value ? THREE.ACESFilmicToneMapping : THREE.NoToneMapping;\n\t\tfsQuad.material.needsUpdate = true;\n\n\t} );\n\tptFolder.add( params, 'stableNoise' ).onChange( value => {\n\n\t\tptRenderer.stableNoise = value;\n\n\t} );\n\tptFolder.add( params, 'multipleImportanceSampling' ).onChange( value => {\n\n\t\tptRenderer.material.setDefine( 'FEATURE_MIS', Number( value ) );\n\t\tptRenderer.reset();\n\n\t} );\n\tptFolder.add( params, 'tiles', 1, 4, 1 ).onChange( value => {\n\n\t\tptRenderer.tiles.set( value, value );\n\n\t} );\n\tptFolder.add( params, 'samplesPerFrame', 1, 10, 1 );\n\tptFolder.add( params, 'filterGlossyFactor', 0, 1 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tptFolder.add( params, 'bounces', 1, 30, 1 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tptFolder.add( params, 'transparentTraversals', 0, 40, 1 ).onChange( value => {\n\n\t\tptRenderer.material.setDefine( 'TRANSPARENT_TRAVERSALS', value );\n\t\tptRenderer.reset();\n\n\t} );\n\tptFolder.add( params, 'resolutionScale', 0.1, 1 ).onChange( () => {\n\n\t\tonResize();\n\n\t} );\n\n\tconst envFolder = gui.addFolder( 'Environment' );\n\tenvFolder.add( params, 'environmentIntensity', 0, 10 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tenvFolder.add( params, 'environmentRotation', 0, 2 * Math.PI ).onChange( v => {\n\n\t\tptRenderer.material.environmentRotation.setFromMatrix4( new THREE.Matrix4().makeRotationY( v ) );\n\t\tptRenderer.reset();\n\n\t} );\n\tenvFolder.add( params, 'environmentBlur', 0, 1 ).onChange( () => {\n\n\t\tupdateEnvBlur();\n\n\t} );\n\tenvFolder.add( params, 'backgroundBlur', 0, 1 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tenvFolder.add( params, 'backgroundAlpha', 0, 1 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tenvFolder.add( params, 'checkerboardTransparency' ).onChange( v => {\n\n\t\tif ( v ) {\n\n\t\t\tdocument.body.classList.add( 'checkerboard' );\n\n\t\t} else {\n\n\t\t\tdocument.body.classList.remove( 'checkerboard' );\n\n\t\t}\n\n\t} );\n\n\tconst cameraFolder = gui.addFolder( 'Camera' );\n\tcameraFolder.add( params, 'cameraProjection', [ 'Perspective', 'Orthographic', 'Equirectangular' ] ).onChange( v => {\n\n\t\tupdateCamera( v );\n\n\t} );\n\tcameraFolder.add( perspectiveCamera, 'focusDistance', 1, 100 ).onChange( reset );\n\tcameraFolder.add( perspectiveCamera, 'apertureBlades', 0, 10, 1 ).onChange( function ( v ) {\n\n\t\tperspectiveCamera.apertureBlades = v === 0 ? 0 : Math.max( v, 3 );\n\t\tthis.updateDisplay();\n\t\treset();\n\n\t} );\n\tcameraFolder.add( perspectiveCamera, 'apertureRotation', 0, 12.5 ).onChange( reset );\n\tcameraFolder.add( perspectiveCamera, 'anamorphicRatio', 0.1, 10.0 ).onChange( reset );\n\tcameraFolder.add( perspectiveCamera, 'bokehSize', 0, 50 ).onChange( reset ).listen();\n\tcameraFolder.add( perspectiveCamera, 'fStop', 0.3, 20 ).onChange( reset ).listen();\n\tcameraFolder.add( perspectiveCamera, 'fov', 25, 100 ).onChange( () => {\n\n\t\tperspectiveCamera.updateProjectionMatrix();\n\t\treset();\n\n\t} ).listen();\n\n\tconst matFolder1 = gui.addFolder( 'Shell Material' );\n\tmatFolder1.addColor( params.material1, 'color' ).onChange( reset );\n\tmatFolder1.addColor( params.material1, 'emissive' ).onChange( reset );\n\tmatFolder1.add( params.material1, 'emissiveIntensity', 0.0, 50.0, 0.01 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'roughness', 0, 1 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'metalness', 0, 1 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'opacity', 0, 1 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'transmission', 0, 1 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'ior', 0.9, 3.0 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'clearcoat', 0, 1 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'clearcoatRoughness', 0, 1 ).onChange( reset );\n\tmatFolder1.addColor( params.material1, 'sheenColor' ).onChange( reset );\n\tmatFolder1.add( params.material1, 'sheenRoughness', 0, 1 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'iridescence', 0.0, 1.0 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'iridescenceIOR', 0.1, 3.0 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'iridescenceThickness', 0.0, 1200.0 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'matte' ).onChange( reset );\n\tmatFolder1.add( params.material1, 'castShadow' ).onChange( reset );\n\tmatFolder1.close();\n\n\tconst matFolder2 = gui.addFolder( 'Ball Material' );\n\tmatFolder2.addColor( params.material2, 'color' ).onChange( reset );\n\tmatFolder2.addColor( params.material2, 'emissive' ).onChange( reset );\n\tmatFolder2.add( params.material2, 'emissiveIntensity', 0.0, 50.0, 0.01 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'roughness', 0, 1 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'metalness', 0, 1 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'opacity', 0, 1 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'transmission', 0, 1 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'ior', 0.9, 3.0 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'clearcoat', 0, 1 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'clearcoatRoughness', 0, 1 ).onChange( reset );\n\tmatFolder2.addColor( params.material2, 'sheenColor' ).onChange( reset );\n\tmatFolder2.add( params.material2, 'sheenRoughness', 0, 1 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'iridescence', 0.0, 1.0 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'iridescenceIOR', 0.1, 3.0 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'iridescenceThickness', 0.0, 1200.0 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'matte' ).onChange( reset );\n\tmatFolder2.add( params.material2, 'castShadow' ).onChange( reset );\n\tmatFolder2.close();\n\n\tconst matFolder3 = gui.addFolder( 'Floor Material' );\n\tmatFolder3.addColor( params.material3, 'color' ).onChange( reset );\n\tmatFolder3.add( params.material3, 'roughness', 0, 1 ).onChange( reset );\n\tmatFolder3.add( params.material3, 'metalness', 0, 1 ).onChange( reset );\n\tmatFolder3.add( params.material3, 'clearcoat', 0, 1 ).onChange( reset );\n\tmatFolder3.add( params.material3, 'clearcoatRoughness', 0, 1 ).onChange( reset );\n\tmatFolder3.addColor( params.material3, 'sheenColor' ).onChange( reset );\n\tmatFolder3.add( params.material3, 'sheenRoughness', 0, 1 ).onChange( reset );\n\tmatFolder3.add( params.material3, 'matte' ).onChange( reset );\n\tmatFolder3.add( params.material3, 'castShadow' ).onChange( reset );\n\tmatFolder3.add( params.material3, 'iridescence', 0.0, 1.0 ).onChange( reset );\n\tmatFolder3.add( params.material3, 'iridescenceIOR', 0.1, 3.0 ).onChange( reset );\n\tmatFolder3.add( params.material3, 'iridescenceThickness', 0.0, 1200.0 ).onChange( reset );\n\tmatFolder3.close();\n\n\tanimate();\n\n}\n\nfunction onResize() {\n\n\tconst w = window.innerWidth;\n\tconst h = window.innerHeight;\n\tconst scale = params.resolutionScale;\n\tconst dpr = window.devicePixelRatio;\n\n\tptRenderer.setSize( w * scale * dpr, h * scale * dpr );\n\tptRenderer.reset();\n\n\trenderer.setSize( w, h );\n\trenderer.setPixelRatio( window.devicePixelRatio * scale );\n\n\tconst aspect = w / h;\n\n\tperspectiveCamera.aspect = aspect;\n\tperspectiveCamera.updateProjectionMatrix();\n\n\tconst orthoHeight = orthoWidth / aspect;\n\torthoCamera.top = orthoHeight / 2;\n\torthoCamera.bottom = orthoHeight / - 2;\n\torthoCamera.updateProjectionMatrix();\n\n}\n\nfunction reset() {\n\n\tptRenderer.reset();\n\n}\n\nfunction updateEnvBlur() {\n\n\tconst blurredTex = envMapGenerator.generate( envMap, params.environmentBlur );\n\tptRenderer.material.envMapInfo.updateFrom( blurredTex );\n\tscene.environment = blurredTex;\n\tptRenderer.reset();\n\n}\n\nfunction updateCamera( cameraProjection ) {\n\n\tif ( cameraProjection === 'Perspective' ) {\n\n\t\tif ( activeCamera ) {\n\n\t\t\tperspectiveCamera.position.copy( activeCamera.position );\n\n\t\t}\n\n\t\tactiveCamera = perspectiveCamera;\n\n\t} else if ( cameraProjection === 'Orthographic' ) {\n\n\t\tif ( activeCamera ) {\n\n\t\t\torthoCamera.position.copy( activeCamera.position );\n\n\t\t}\n\n\t\tactiveCamera = orthoCamera;\n\n\t} else { // Equirect\n\n\t\tif ( activeCamera ) {\n\n\t\t\tequirectCamera.position.copy( activeCamera.position );\n\n\t\t}\n\n\t\tactiveCamera = equirectCamera;\n\n\t}\n\n\tcontrols.object = activeCamera;\n\tptRenderer.camera = activeCamera;\n\n\tcontrols.update();\n\n\treset();\n\n}\n\nfunction animate() {\n\n\trequestAnimationFrame( animate );\n\n\tconst m1 = materials[ 0 ];\n\tm1.color.set( params.material1.color ).convertSRGBToLinear();\n\tm1.emissive.set( params.material1.emissive ).convertSRGBToLinear();\n\tm1.emissiveIntensity = params.material1.emissiveIntensity;\n\tm1.metalness = params.material1.metalness;\n\tm1.roughness = params.material1.roughness;\n\tm1.transmission = params.material1.transmission;\n\tm1.ior = params.material1.ior;\n\tm1.opacity = params.material1.opacity;\n\tm1.clearcoat = params.material1.clearcoat;\n\tm1.clearcoatRoughness = params.material1.clearcoatRoughness;\n\tm1.sheenColor.set( params.material1.sheenColor ).convertSRGBToLinear();\n\tm1.sheenRoughness = params.material1.sheenRoughness;\n\tm1.iridescence = params.material1.iridescence;\n\tm1.iridescenceIOR = params.material1.iridescenceIOR;\n\tm1.iridescenceThicknessRange = [ 0, params.material1.iridescenceThickness ];\n\n\tconst m2 = materials[ 1 ];\n\tm2.color.set( params.material2.color ).convertSRGBToLinear();\n\tm2.emissive.set( params.material2.emissive ).convertSRGBToLinear();\n\tm2.emissiveIntensity = params.material2.emissiveIntensity;\n\tm2.metalness = params.material2.metalness;\n\tm2.roughness = params.material2.roughness;\n\tm2.transmission = params.material2.transmission;\n\tm2.ior = params.material2.ior;\n\tm2.opacity = params.material2.opacity;\n\tm2.clearcoat = params.material2.clearcoat;\n\tm2.clearcoatRoughness = params.material2.clearcoatRoughness;\n\tm2.sheenColor.set( params.material2.sheenColor ).convertSRGBToLinear();\n\tm2.sheenRoughness = params.material2.sheenRoughness;\n\tm2.iridescence = params.material2.iridescence;\n\tm2.iridescenceIOR = params.material2.iridescenceIOR;\n\tm2.iridescenceThicknessRange = [ 0, params.material2.iridescenceThickness ];\n\n\tconst m3 = materials[ 2 ];\n\tm3.color.set( params.material3.color ).convertSRGBToLinear();\n\tm3.metalness = params.material3.metalness;\n\tm3.roughness = params.material3.roughness;\n\tm3.clearcoat = params.material3.clearcoat;\n\tm3.clearcoatRoughness = params.material3.clearcoatRoughness;\n\tm3.sheenColor.set( params.material3.sheenColor ).convertSRGBToLinear();\n\tm3.sheenRoughness = params.material3.sheenRoughness;\n\tm3.iridescence = params.material3.iridescence;\n\tm3.iridescenceIOR = params.material3.iridescenceIOR;\n\tm3.iridescenceThicknessRange = [ 0, params.material3.iridescenceThickness ];\n\n\tptRenderer.material.materials.updateFrom( sceneInfo.materials, sceneInfo.textures );\n\tptRenderer.material.materials.setMatte( 0, params.material1.matte );\n\tptRenderer.material.materials.setMatte( 1, params.material2.matte );\n\tptRenderer.material.materials.setMatte( 2, params.material3.matte );\n\tptRenderer.material.materials.setCastShadow( 0, params.material1.castShadow );\n\tptRenderer.material.materials.setCastShadow( 1, params.material2.castShadow );\n\tptRenderer.material.materials.setCastShadow( 2, params.material3.castShadow );\n\n\tptRenderer.material.filterGlossyFactor = params.filterGlossyFactor;\n\tptRenderer.material.environmentIntensity = params.environmentIntensity;\n\tptRenderer.material.backgroundBlur = params.backgroundBlur;\n\tptRenderer.material.bounces = params.bounces;\n\tptRenderer.material.backgroundAlpha = params.backgroundAlpha;\n\tptRenderer.material.physicalCamera.updateFrom( activeCamera );\n\n\tactiveCamera.updateMatrixWorld();\n\n\tif ( params.backgroundAlpha < 1.0 ) {\n\n\t\tscene.background = null;\n\n\t} else {\n\n\t\tscene.background = scene.environment;\n\n\t}\n\n\tfor ( let i = 0, l = params.samplesPerFrame; i < l; i ++ ) {\n\n\t\tptRenderer.update();\n\n\t}\n\n\tif ( ptRenderer.samples < 1 ) {\n\n\t\trenderer.render( scene, activeCamera );\n\n\t}\n\n\trenderer.autoClear = false;\n\tfsQuad.material.map = ptRenderer.target.texture;\n\tfsQuad.render( renderer );\n\trenderer.autoClear = true;\n\n\tsamplesEl.innerText = `Samples: ${ Math.floor( ptRenderer.samples ) }`;\n\n}\n\n\n\n\n"],"names":["$ilwiq","parcelRequire","$0473c5c83fd2a77a$var$renderer","$0473c5c83fd2a77a$var$controls","$0473c5c83fd2a77a$var$sceneInfo","$0473c5c83fd2a77a$var$ptRenderer","$0473c5c83fd2a77a$var$activeCamera","$0473c5c83fd2a77a$var$fsQuad","$0473c5c83fd2a77a$var$materials","$0473c5c83fd2a77a$var$perspectiveCamera","$0473c5c83fd2a77a$var$orthoCamera","$0473c5c83fd2a77a$var$equirectCamera","$0473c5c83fd2a77a$var$envMap","$0473c5c83fd2a77a$var$envMapGenerator","$0473c5c83fd2a77a$var$scene","$0473c5c83fd2a77a$var$samplesEl","$0473c5c83fd2a77a$var$params","material1","color","emissive","emissiveIntensity","roughness","metalness","ior","transmission","opacity","clearcoat","clearcoatRoughness","sheenColor","sheenRoughness","iridescence","iridescenceIOR","iridescenceThickness","matte","castShadow","material2","material3","multipleImportanceSampling","stableNoise","environmentIntensity","environmentRotation","environmentBlur","backgroundBlur","bounces","samplesPerFrame","acesToneMapping","resolutionScale","window","devicePixelRatio","transparentTraversals","filterGlossyFactor","tiles","backgroundAlpha","checkerboardTransparency","cameraProjection","location","hash","includes","$0473c5c83fd2a77a$var$onResize","w","innerWidth","h","innerHeight","scale","dpr","setSize","reset","setPixelRatio","aspect","updateProjectionMatrix","orthoHeight","top","bottom","$0473c5c83fd2a77a$var$reset","$0473c5c83fd2a77a$var$updateEnvBlur","blurredTex","generate","material","envMapInfo","updateFrom","environment","$0473c5c83fd2a77a$var$updateCamera","position","copy","object","camera","update","$0473c5c83fd2a77a$var$animate","requestAnimationFrame","m1","set","convertSRGBToLinear","iridescenceThicknessRange","m2","m3","materials","textures","setMatte","setCastShadow","physicalCamera","updateMatrixWorld","background","i","l","samples","render","autoClear","map","target","texture","innerText","Math","floor","max","async","WebGLRenderer","antialias","toneMapping","ACESFilmicToneMapping","outputEncoding","sRGBEncoding","setClearColor","document","body","appendChild","domElement","$4CEV9","PhysicalCamera","OrthographicCamera","$0473c5c83fd2a77a$var$orthoWidth","EquirectCamera","PathTracingRenderer","alpha","PhysicalPathTracingMaterial","setDefine","Number","$RPVlj","FullScreenQuad","MeshBasicMaterial","blending","CustomBlending","$5Rd1x","OrbitControls","addEventListener","Scene","getElementById","BlurredEnvMapGenerator","envMapPromise","Promise","resolve","$891vQ","RGBELoader","load","generator","$cVdfP","PathTracingSceneWorker","gltfPromise","$7lx9d","GLTFLoader","setMeshoptDecoder","$kp7Te","MeshoptDecoder","loadAsync","then","gltf","group","Group","scene","setScalar","add","box","Box3","setFromObject","Mesh","CylinderBufferGeometry","MeshPhysicalMaterial","geometry","toNonIndexed","clearGroups","y","min","traverse","c","computeVertexNormals","name","result","bvh","normalAttribute","attributes","normal","tangentAttribute","tangent","uvAttribute","uv","materialIndexAttribute","materialIndex","setTextures","dispose","all","remove","classList","gui","$jiuw3","GUI","ptFolder","addFolder","onChange","value","NoToneMapping","needsUpdate","envFolder","PI","v","setFromMatrix4","Matrix4","makeRotationY","cameraFolder","apertureBlades","this","updateDisplay","listen","matFolder1","addColor","close","matFolder2","matFolder3","$0473c5c83fd2a77a$var$init"],"version":3,"file":"materialBall.2d30a0c5.js.map"}
{"mappings":"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","sources":["example/viewerTest.js","node_modules/three/examples/jsm/libs/stats.module.js"],"sourcesContent":["import {\n\tACESFilmicToneMapping,\n\tNoToneMapping,\n\tLoadingManager,\n\tWebGLRenderer,\n\tScene,\n\tPerspectiveCamera,\n\tMeshBasicMaterial,\n\tsRGBEncoding,\n\tCustomBlending,\n\tEquirectangularReflectionMapping,\n\tMathUtils,\n} from 'three';\nimport { MeshoptDecoder } from 'three/examples/jsm/libs/meshopt_decoder.module.js';\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\nimport Stats from 'three/examples/jsm/libs/stats.module.js';\nimport { PathTracingSceneWorker } from '../src/workers/PathTracingSceneWorker.js';\nimport { PhysicalPathTracingMaterial, PathTracingRenderer, MaterialReducer } from '../src/index.js';\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\n\nconst CONFIG_URL = 'https://raw.githubusercontent.com/google/model-viewer/master/packages/render-fidelity-tools/test/config.json';\nconst BASE_URL = 'https://raw.githubusercontent.com/google/model-viewer/master/packages/render-fidelity-tools/test/config/';\n\nconst urlParams = new URLSearchParams( window.location.search );\nconst maxSamples = parseInt( urlParams.get( 'samples' ) ) || - 1;\nconst hideUI = urlParams.get( 'hideUI' ) === 'true';\nconst tiles = parseInt( urlParams.get( 'tiles' ) ) || 2;\n\nconst params = {\n\n\tenvironmentIntensity: 1.0,\n\tmultipleImportanceSampling: true,\n\tacesToneMapping: true,\n\ttilesX: tiles,\n\ttilesY: tiles,\n\tsamplesPerFrame: 1,\n\tscale: 1 / window.devicePixelRatio,\n\n\tmodel: '',\n\tcheckerboardTransparency: true,\n\n\tenable: true,\n\tbounces: 10,\n\tpause: false,\n\n\timageMode: 'hidden',\n\timageOpacity: 0.5,\n\timageType: 'dspbr-pt',\n\n};\n\nlet creditEl, loadingEl, samplesEl, containerEl, imgEl;\nlet gui, stats, sceneInfo;\nlet renderer, camera;\nlet ptRenderer, fsQuad, controls, scene;\nlet loadingModel = false;\nlet delaySamples = 0;\nlet models;\n\ninit();\n\nasync function init() {\n\n\t// get elements\n\tcreditEl = document.getElementById( 'credits' );\n\tloadingEl = document.getElementById( 'loading' );\n\tsamplesEl = document.getElementById( 'samples' );\n\tcontainerEl = document.getElementById( 'container' );\n\timgEl = document.querySelector( 'img' );\n\n\tif ( hideUI ) {\n\n\t\tcontainerEl.style.background = 'transparent';\n\t\tdocument.body.style.background = 'transparent';\n\n\t}\n\n\t// init renderer\n\trenderer = new WebGLRenderer( { antialias: true } );\n\trenderer.outputEncoding = sRGBEncoding;\n\trenderer.toneMapping = ACESFilmicToneMapping;\n\trenderer.physicallyCorrectLights = true;\n\tcontainerEl.appendChild( renderer.domElement );\n\n\t// init scene\n\tscene = new Scene();\n\n\t// init camera\n\tconst aspect = window.innerWidth / window.innerHeight;\n\tcamera = new PerspectiveCamera( 60, aspect, 0.01, 500 );\n\tcamera.position.set( - 1, 0.25, 1 );\n\n\t// init path tracer\n\tptRenderer = new PathTracingRenderer( renderer );\n\tptRenderer.camera = camera;\n\tptRenderer.alpha = true;\n\tptRenderer.material = new PhysicalPathTracingMaterial();\n\tptRenderer.tiles.set( params.tiles, params.tiles );\n\tptRenderer.material.setDefine( 'FEATURE_MIS', Number( params.multipleImportanceSampling ) );\n\tptRenderer.tiles.set( params.tilesX, params.tilesY );\n\n\n\t// init fsquad\n\tfsQuad = new FullScreenQuad( new MeshBasicMaterial( {\n\t\tmap: ptRenderer.target.texture,\n\t\tblending: CustomBlending\n\t} ) );\n\n\t// init controls\n\tcontrols = new OrbitControls( camera, containerEl );\n\tcontrols.addEventListener( 'change', resetRenderer );\n\n\t// init stats\n\tstats = new Stats();\n\tif ( ! hideUI ) {\n\n\t\tcontainerEl.appendChild( stats.dom );\n\n\t} else {\n\n\t\tcreditEl.remove();\n\t\tsamplesEl.remove();\n\n\t}\n\n\t// init models\n\tconst { scenarios } = await ( await fetch( CONFIG_URL ) ).json();\n\tmodels = {};\n\tscenarios.forEach( s => {\n\n\t\tmodels[ s.name ] = s;\n\n\t} );\n\n\tlet initialModel = scenarios[ 0 ].name;\n\tif ( window.location.hash ) {\n\n\t\tconst modelName = window.location.hash.substring( 1 ).replaceAll( '%20', ' ' );\n\t\tif ( modelName in models ) {\n\n\t\t\tinitialModel = modelName;\n\n\t\t}\n\n\t}\n\n\tparams.model = initialModel;\n\n\tupdateModel();\n\n\tanimate();\n\n}\n\nfunction animate() {\n\n\trequestAnimationFrame( animate );\n\n\tif ( ptRenderer.samples >= maxSamples && maxSamples !== - 1 ) {\n\n\t\treturn;\n\n\t}\n\n\tstats.update();\n\n\timgEl.style.display = params.imageMode === 'hidden' ? 'none' : 'inline-block';\n\timgEl.style.opacity = params.imageMode === 'side-by-side' ? 1.0 : params.imageOpacity;\n\timgEl.style.position = params.imageMode === 'side-by-side' ? 'initial' : 'absolute';\n\timgEl.style.width = renderer.domElement.style.width;\n\timgEl.style.height = renderer.domElement.style.height;\n\n\tif ( loadingModel ) {\n\n\t\treturn;\n\n\t}\n\n\tif ( ptRenderer.samples < 1.0 || ! params.enable ) {\n\n\t\trenderer.render( scene, camera );\n\n\t}\n\n\tif ( params.enable && delaySamples === 0 ) {\n\n\t\tconst samples = Math.floor( ptRenderer.samples );\n\t\tsamplesEl.innerText = `samples: ${ samples }`;\n\n\t\tptRenderer.material.materials.updateFrom( sceneInfo.materials, sceneInfo.textures );\n\t\tptRenderer.material.filterGlossyFactor = 0.5;\n\t\tptRenderer.material.bounces = params.bounces;\n\t\tptRenderer.material.physicalCamera.updateFrom( camera );\n\t\tptRenderer.material.environmentIntensity = params.environmentIntensity;\n\n\t\tcamera.updateMatrixWorld();\n\n\n\n\t\tif ( ! params.pause || ptRenderer.samples < 1 ) {\n\n\t\t\tfor ( let i = 0, l = params.samplesPerFrame; i < l; i ++ ) {\n\n\t\t\t\tptRenderer.update();\n\n\t\t\t}\n\n\t\t}\n\n\t\trenderer.autoClear = false;\n\t\tfsQuad.render( renderer );\n\t\trenderer.autoClear = true;\n\n\t} else if ( delaySamples > 0 ) {\n\n\t\tdelaySamples --;\n\n\t}\n\n\tif ( ptRenderer.samples >= maxSamples && maxSamples !== - 1 ) {\n\n\t\trequestAnimationFrame( () => {\n\n\t\t\twindow.dispatchEvent( new Event( 'render-complete' ) );\n\n\t\t} );\n\n\t}\n\n\tsamplesEl.innerText = `Samples: ${ Math.floor( ptRenderer.samples ) }`;\n\n}\n\nfunction resetRenderer() {\n\n\tif ( params.tilesX * params.tilesY !== 1.0 ) {\n\n\t\tdelaySamples = 1;\n\n\t}\n\n\tptRenderer.reset();\n\n}\n\nfunction buildGui() {\n\n\tif ( hideUI ) {\n\n\t\treturn;\n\n\t}\n\n\tif ( gui ) {\n\n\t\tgui.destroy();\n\n\t}\n\n\tgui = new GUI();\n\n\tgui.add( params, 'model', Object.keys( models ) ).onChange( updateModel );\n\n\tconst pathTracingFolder = gui.addFolder( 'path tracing' );\n\tpathTracingFolder.add( params, 'enable' );\n\tpathTracingFolder.add( params, 'pause' );\n\tpathTracingFolder.add( params, 'scale', 0, 1 ).onChange( v => {\n\n\t\tconst dpr = window.devicePixelRatio;\n\t\tlet { dimensions = {} } = models[ params.model ];\n\t\tdimensions = Object.assign( {}, { width: 768, height: 768 }, dimensions );\n\n\t\tconst { width, height } = dimensions;\n\t\tptRenderer.setSize( width * dpr * v, height * dpr * v );\n\t\tptRenderer.reset();\n\n\t} );\n\tpathTracingFolder.add( params, 'multipleImportanceSampling' ).onChange( v => {\n\n\t\tptRenderer.material.setDefine( 'FEATURE_MIS', Number( v ) );\n\t\tptRenderer.reset();\n\n\t} );\n\tpathTracingFolder.add( params, 'acesToneMapping' ).onChange( v => {\n\n\t\trenderer.toneMapping = v ? ACESFilmicToneMapping : NoToneMapping;\n\n\t} );\n\tpathTracingFolder.add( params, 'bounces', 1, 20, 1 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tpathTracingFolder.add( params, 'environmentIntensity', 0, 5 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\n\tconst comparisonFolder = gui.addFolder( 'comparison' );\n\tcomparisonFolder.add( params, 'imageMode', [ 'hidden', 'overlay', 'side-by-side' ] );\n\tcomparisonFolder.add( params, 'imageType', [\n\t\t'dspbr-pt',\n\t\t'filament',\n\t\t'babylon',\n\t\t'gltf-sample-viewer',\n\t\t'model-viewer',\n\t\t'rhodonite',\n\t\t'stellar'\n\t] ).onChange( updateImage );\n\tcomparisonFolder.add( params, 'imageOpacity', 0, 1.0 );\n\n\tconst resolutionFolder = gui.addFolder( 'resolution' );\n\tresolutionFolder.add( params, 'samplesPerFrame', 1, 10, 1 );\n\tresolutionFolder.add( params, 'tilesX', 1, 10, 1 ).onChange( v => {\n\n\t\tptRenderer.tiles.x = v;\n\n\t} );\n\tresolutionFolder.add( params, 'tilesY', 1, 10, 1 ).onChange( v => {\n\n\t\tptRenderer.tiles.y = v;\n\n\t} );\n\tresolutionFolder.open();\n\n\tconst backgroundFolder = gui.addFolder( 'background' );\n\tbackgroundFolder.add( params, 'checkerboardTransparency' ).onChange( v => {\n\n\t\tif ( v ) containerEl.classList.add( 'checkerboard' );\n\t\telse containerEl.classList.remove( 'checkerboard' );\n\n\t} );\n\n}\n\nasync function updateModel() {\n\n\tif ( gui ) {\n\n\t\tcontainerEl.classList.remove( 'checkerboard' );\n\t\tgui.destroy();\n\t\tgui = null;\n\n\t}\n\n\tlet model, envMap;\n\tconst manager = new LoadingManager();\n\tconst modelInfo = models[ params.model ];\n\n\twindow.location.hash = params.model;\n\n\tlet {\n\t\torbit = {},\n\t\ttarget = {},\n\t\tdimensions = {},\n\t} = modelInfo;\n\n\tconst {\n\t\tverticalFoV = 45,\n\t\trenderSkybox = false,\n\t\tlighting = '../../../shared-assets/environments/lightroom_14b.hdr',\n\t} = modelInfo;\n\n\torbit = Object.assign( {}, { theta: 0, phi: 90, radius: 1 }, orbit );\n\ttarget = Object.assign( {}, { x: 0, y: 0, z: 0 }, target );\n\tdimensions = Object.assign( {}, { width: 768, height: 768 }, dimensions );\n\n\t// add a minimal radius so the camera orientation is correct when radius is 0\n\torbit.radius = Math.max( orbit.radius, 1e-5 );\n\n\tloadingModel = true;\n\tcontainerEl.style.display = 'none';\n\tsamplesEl.innerText = '--';\n\tcreditEl.innerText = '--';\n\tloadingEl.innerText = 'Loading';\n\tloadingEl.style.visibility = 'visible';\n\n\tupdateImage();\n\n\tscene.traverse( c => {\n\n\t\tif ( c.material ) {\n\n\t\t\tconst material = c.material;\n\t\t\tfor ( const key in material ) {\n\n\t\t\t\tif ( material[ key ] && material[ key ].isTexture ) {\n\n\t\t\t\t\tmaterial[ key ].dispose();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tif ( sceneInfo ) {\n\n\t\tscene.remove( sceneInfo.scene );\n\n\t}\n\n\tconst onFinish = async () => {\n\n\t\tconst reducer = new MaterialReducer();\n\t\treducer.process( model );\n\t\tmodel.updateMatrixWorld();\n\n\t\tconst generator = new PathTracingSceneWorker();\n\t\tconst result = await generator.generate( model, { onProgress: v => {\n\n\t\t\tconst percent = Math.floor( 100 * v );\n\t\t\tloadingEl.innerText = `Building BVH : ${ percent }%`;\n\n\t\t} } );\n\n\t\tsceneInfo = result;\n\t\tscene.add( sceneInfo.scene );\n\n\t\tconst { bvh, textures, materials } = result;\n\t\tconst geometry = bvh.geometry;\n\t\tconst material = ptRenderer.material;\n\n\t\tmaterial.bvh.updateFrom( bvh );\n\t\tmaterial.normalAttribute.updateFrom( geometry.attributes.normal );\n\t\tmaterial.tangentAttribute.updateFrom( geometry.attributes.tangent );\n\t\tmaterial.uvAttribute.updateFrom( geometry.attributes.uv );\n\t\tmaterial.materialIndexAttribute.updateFrom( geometry.attributes.materialIndex );\n\t\tmaterial.textures.setTextures( renderer, 2048, 2048, textures );\n\t\tmaterial.materials.updateFrom( materials, textures );\n\t\tmaterial.envMapInfo.updateFrom( envMap );\n\n\t\tgenerator.dispose();\n\n\t\tenvMap.mapping = EquirectangularReflectionMapping;\n\t\tscene.environment = envMap;\n\t\tscene.background = envMap;\n\n\t\tloadingEl.style.visibility = 'hidden';\n\n\t\tcreditEl.innerHTML = modelInfo.credit || '';\n\t\tcreditEl.style.visibility = modelInfo.credit ? 'visible' : 'hidden';\n\t\tbuildGui();\n\n\t\tcamera.position.setFromSphericalCoords( orbit.radius, MathUtils.DEG2RAD * orbit.phi, MathUtils.DEG2RAD * orbit.theta );\n\t\tcamera.position.x += target.x;\n\t\tcamera.position.y += target.y;\n\t\tcamera.position.z += target.z;\n\n\t\tconst dpr = window.devicePixelRatio;\n\t\tconst { width, height } = dimensions;\n\t\trenderer.setSize( width, height );\n\t\trenderer.setPixelRatio( dpr );\n\t\tptRenderer.setSize( width * dpr * params.scale, height * dpr * params.scale );\n\t\tcamera.aspect = width / height;\n\t\tcamera.fov = verticalFoV;\n\t\tcamera.updateProjectionMatrix();\n\n\t\tcontrols.target.set( target.x, target.y, target.z );\n\t\tcontrols.update();\n\t\tcamera.updateMatrixWorld();\n\n\t\tptRenderer.material.backgroundAlpha = renderSkybox ? 1 : 0;\n\n\t\tptRenderer.reset();\n\n\t\tcontainerEl.style.display = 'flex';\n\t\tloadingModel = false;\n\t\tif ( params.checkerboardTransparency ) {\n\n\t\t\tcontainerEl.classList.add( 'checkerboard' );\n\n\t\t}\n\n\t};\n\n\tlet modelUrl = new URL( modelInfo.model, BASE_URL ).toString();\n\tmodelUrl = modelUrl.replace( /.*?glTF-Sample-Models/, 'https://raw.githubusercontent.com/KhronosGroup/glTF-Sample-Models/master' );\n\n\tmanager.onLoad = onFinish;\n\n\tconst envUrl = new URL( lighting, BASE_URL ).toString();\n\tnew RGBELoader( manager )\n\t\t.load( envUrl, res => {\n\n\t\t\tenvMap = res;\n\n\t\t} );\n\n\tnew GLTFLoader( manager )\n\t\t.setMeshoptDecoder( MeshoptDecoder )\n\t\t.load(\n\t\t\tmodelUrl,\n\t\t\tgltf => {\n\n\t\t\t\tmodel = gltf.scene;\n\n\t\t\t},\n\t\t\tprogress => {\n\n\t\t\t\tif ( progress.total !== 0 && progress.total >= progress.loaded ) {\n\n\t\t\t\t\tconst percent = Math.floor( 100 * progress.loaded / progress.total );\n\t\t\t\t\tloadingEl.innerText = `Loading : ${ percent }%`;\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t);\n\n}\n\nfunction updateImage() {\n\n\timgEl.src = `https://raw.githubusercontent.com/google/model-viewer/master/packages/render-fidelity-tools/test/goldens/${ params.model }/${ params.imageType }-golden.png`;\n\n}\n","var Stats = function () {\n\n\tvar mode = 0;\n\n\tvar container = document.createElement( 'div' );\n\tcontainer.style.cssText = 'position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000';\n\tcontainer.addEventListener( 'click', function ( event ) {\n\n\t\tevent.preventDefault();\n\t\tshowPanel( ++ mode % container.children.length );\n\n\t}, false );\n\n\t//\n\n\tfunction addPanel( panel ) {\n\n\t\tcontainer.appendChild( panel.dom );\n\t\treturn panel;\n\n\t}\n\n\tfunction showPanel( id ) {\n\n\t\tfor ( var i = 0; i < container.children.length; i ++ ) {\n\n\t\t\tcontainer.children[ i ].style.display = i === id ? 'block' : 'none';\n\n\t\t}\n\n\t\tmode = id;\n\n\t}\n\n\t//\n\n\tvar beginTime = ( performance || Date ).now(), prevTime = beginTime, frames = 0;\n\n\tvar fpsPanel = addPanel( new Stats.Panel( 'FPS', '#0ff', '#002' ) );\n\tvar msPanel = addPanel( new Stats.Panel( 'MS', '#0f0', '#020' ) );\n\n\tif ( self.performance && self.performance.memory ) {\n\n\t\tvar memPanel = addPanel( new Stats.Panel( 'MB', '#f08', '#201' ) );\n\n\t}\n\n\tshowPanel( 0 );\n\n\treturn {\n\n\t\tREVISION: 16,\n\n\t\tdom: container,\n\n\t\taddPanel: addPanel,\n\t\tshowPanel: showPanel,\n\n\t\tbegin: function () {\n\n\t\t\tbeginTime = ( performance || Date ).now();\n\n\t\t},\n\n\t\tend: function () {\n\n\t\t\tframes ++;\n\n\t\t\tvar time = ( performance || Date ).now();\n\n\t\t\tmsPanel.update( time - beginTime, 200 );\n\n\t\t\tif ( time >= prevTime + 1000 ) {\n\n\t\t\t\tfpsPanel.update( ( frames * 1000 ) / ( time - prevTime ), 100 );\n\n\t\t\t\tprevTime = time;\n\t\t\t\tframes = 0;\n\n\t\t\t\tif ( memPanel ) {\n\n\t\t\t\t\tvar memory = performance.memory;\n\t\t\t\t\tmemPanel.update( memory.usedJSHeapSize / 1048576, memory.jsHeapSizeLimit / 1048576 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn time;\n\n\t\t},\n\n\t\tupdate: function () {\n\n\t\t\tbeginTime = this.end();\n\n\t\t},\n\n\t\t// Backwards Compatibility\n\n\t\tdomElement: container,\n\t\tsetMode: showPanel\n\n\t};\n\n};\n\nStats.Panel = function ( name, fg, bg ) {\n\n\tvar min = Infinity, max = 0, round = Math.round;\n\tvar PR = round( window.devicePixelRatio || 1 );\n\n\tvar WIDTH = 80 * PR, HEIGHT = 48 * PR,\n\t\tTEXT_X = 3 * PR, TEXT_Y = 2 * PR,\n\t\tGRAPH_X = 3 * PR, GRAPH_Y = 15 * PR,\n\t\tGRAPH_WIDTH = 74 * PR, GRAPH_HEIGHT = 30 * PR;\n\n\tvar canvas = document.createElement( 'canvas' );\n\tcanvas.width = WIDTH;\n\tcanvas.height = HEIGHT;\n\tcanvas.style.cssText = 'width:80px;height:48px';\n\n\tvar context = canvas.getContext( '2d' );\n\tcontext.font = 'bold ' + ( 9 * PR ) + 'px Helvetica,Arial,sans-serif';\n\tcontext.textBaseline = 'top';\n\n\tcontext.fillStyle = bg;\n\tcontext.fillRect( 0, 0, WIDTH, HEIGHT );\n\n\tcontext.fillStyle = fg;\n\tcontext.fillText( name, TEXT_X, TEXT_Y );\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\tcontext.fillStyle = bg;\n\tcontext.globalAlpha = 0.9;\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\treturn {\n\n\t\tdom: canvas,\n\n\t\tupdate: function ( value, maxValue ) {\n\n\t\t\tmin = Math.min( min, value );\n\t\t\tmax = Math.max( max, value );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 1;\n\t\t\tcontext.fillRect( 0, 0, WIDTH, GRAPH_Y );\n\t\t\tcontext.fillStyle = fg;\n\t\t\tcontext.fillText( round( value ) + ' ' + name + ' (' + round( min ) + '-' + round( max ) + ')', TEXT_X, TEXT_Y );\n\n\t\t\tcontext.drawImage( canvas, GRAPH_X + PR, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT, GRAPH_X, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 0.9;\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, round( ( 1 - ( value / maxValue ) ) * GRAPH_HEIGHT ) );\n\n\t\t}\n\n\t};\n\n};\n\nexport default Stats;\n"],"names":["$ilwiq","parcelRequire","$5aae44c9b1864d53$var$Stats","mode","container","document","createElement","addPanel","panel","appendChild","dom","showPanel","id","i","children","length","style","display","cssText","addEventListener","event","preventDefault","beginTime","performance","Date","now","prevTime","frames","fpsPanel","Panel","msPanel","self","memory","memPanel","REVISION","begin","end","time","update","usedJSHeapSize","jsHeapSizeLimit","this","domElement","setMode","name","fg","bg","min","Infinity","max","round","Math","PR","window","devicePixelRatio","WIDTH","HEIGHT","TEXT_X","TEXT_Y","GRAPH_X","GRAPH_Y","GRAPH_WIDTH","GRAPH_HEIGHT","canvas","width","height","context","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","value","maxValue","drawImage","$5aae44c9b1864d53$export$2e2bcd8739ae039","$f6c83a1fcfd19596$var$BASE_URL","$f6c83a1fcfd19596$var$urlParams","URLSearchParams","location","search","$f6c83a1fcfd19596$var$maxSamples","parseInt","get","$f6c83a1fcfd19596$var$hideUI","$f6c83a1fcfd19596$var$tiles","$f6c83a1fcfd19596$var$params","environmentIntensity","multipleImportanceSampling","acesToneMapping","tilesX","tilesY","samplesPerFrame","scale","model","checkerboardTransparency","enable","bounces","pause","imageMode","imageOpacity","imageType","$f6c83a1fcfd19596$var$creditEl","$f6c83a1fcfd19596$var$loadingEl","$f6c83a1fcfd19596$var$samplesEl","$f6c83a1fcfd19596$var$containerEl","$f6c83a1fcfd19596$var$imgEl","$f6c83a1fcfd19596$var$gui","$f6c83a1fcfd19596$var$stats","$f6c83a1fcfd19596$var$sceneInfo","$f6c83a1fcfd19596$var$renderer","$f6c83a1fcfd19596$var$camera","$f6c83a1fcfd19596$var$ptRenderer","$f6c83a1fcfd19596$var$fsQuad","$f6c83a1fcfd19596$var$controls","$f6c83a1fcfd19596$var$scene","$f6c83a1fcfd19596$var$models","$f6c83a1fcfd19596$var$loadingModel","$f6c83a1fcfd19596$var$delaySamples","$f6c83a1fcfd19596$var$animate","requestAnimationFrame","samples","opacity","position","render","floor","innerText","material","materials","updateFrom","textures","filterGlossyFactor","physicalCamera","updateMatrixWorld","l","autoClear","dispatchEvent","Event","$f6c83a1fcfd19596$var$resetRenderer","reset","async","$f6c83a1fcfd19596$var$updateModel","envMap","classList","remove","destroy","manager","LoadingManager","modelInfo","hash","orbit","target","dimensions","verticalFoV","renderSkybox","lighting","Object","assign","theta","phi","radius","x","y","z","visibility","$f6c83a1fcfd19596$var$updateImage","traverse","c","key","isTexture","dispose","scene","modelUrl","URL","toString","replace","onLoad","$4CEV9","MaterialReducer","process","generator","$cVdfP","PathTracingSceneWorker","result","generate","onProgress","v","percent","add","bvh","geometry","normalAttribute","attributes","normal","tangentAttribute","tangent","uvAttribute","uv","materialIndexAttribute","materialIndex","setTextures","envMapInfo","mapping","EquirectangularReflectionMapping","environment","background","innerHTML","credit","$jiuw3","GUI","keys","onChange","pathTracingFolder","addFolder","dpr","setSize","setDefine","Number","toneMapping","ACESFilmicToneMapping","NoToneMapping","comparisonFolder","resolutionFolder","tiles","open","$f6c83a1fcfd19596$var$buildGui","setFromSphericalCoords","MathUtils","DEG2RAD","setPixelRatio","aspect","fov","updateProjectionMatrix","set","backgroundAlpha","envUrl","$891vQ","RGBELoader","load","res","$7lx9d","GLTFLoader","setMeshoptDecoder","$kp7Te","MeshoptDecoder","gltf","progress","total","loaded","src","getElementById","querySelector","body","WebGLRenderer","antialias","outputEncoding","sRGBEncoding","physicallyCorrectLights","Scene","innerWidth","innerHeight","PerspectiveCamera","PathTracingRenderer","camera","alpha","PhysicalPathTracingMaterial","$RPVlj","FullScreenQuad","MeshBasicMaterial","map","texture","blending","CustomBlending","$5Rd1x","OrbitControls","scenarios","fetch","json","forEach","s","initialModel","modelName","substring","replaceAll","$f6c83a1fcfd19596$var$init"],"version":3,"file":"viewerTest.daf0f9c0.js.map"}